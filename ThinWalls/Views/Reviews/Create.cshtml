@using Microsoft.AspNet.Identity
@model ThinWalls.Models.Review
@{
    ViewBag.Title = "Create";
}

<h2>Create Review</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--User ID hidden field-->
        <input type="hidden" value="@User.Identity.GetUserId()" name="UserID" />


        <!--Yelp ID hidden field-->


        <input type="hidden" value="@ViewBag.ID" name="YelpID" />
        <input type="hidden" value="@ViewBag.Name" name="BusinessName" />


        <div class="form-group">
            @Html.LabelFor(model => model.WallScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.WallScore, "1") 1
                @Html.RadioButtonFor(model => model.WallScore, "2") 2
                @Html.RadioButtonFor(model => model.WallScore, "3") 3
                @Html.RadioButtonFor(model => model.WallScore, "4") 4
                @Html.RadioButtonFor(model => model.WallScore, "5") 5
                @Html.ValidationMessageFor(model => model.WallScore, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { style = "width: 400px; height: 200px", @class = "form-control", placeholder = "Your Thoughts" })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
